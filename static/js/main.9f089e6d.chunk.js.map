{"version":3,"sources":["components/AppStyled.js","components/feedbackOptions/FeedbackOptionsStyled.js","components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/section/SectionStyled.js","components/section/Section.js","components/statistics/StatisticsStyled.js","components/statistics/Statistics.js","components/App.js","index.js"],"names":["Wrapper","styled","div","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","className","onClick","type","name","toUpperCase","slice","Notification","message","SectionStyled","Section","title","children","Statistics","props","total","positiveFeedback","App","state","good","neutral","bad","increment","event","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4hBACA,IASeA,EATCC,IAAOC,IAAV,K,uaCAb,IAgBeF,EAhBCC,IAAOC,IAAV,KCcEC,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAAC,EAAD,UACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC5B,wBAAQC,UAAU,eAAeC,QAASN,EAAiBO,KAAK,SAAoBC,KAAMJ,EAA1F,SACGA,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,IADwCN,SCDvEO,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,K,wMCFb,IASeC,EATOjB,IAAOC,IAAV,KCWJiB,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAAC,EAAD,WACE,oBAAIX,UAAU,gBAAd,SAA+BU,IAC9BC,M,sNCNP,IAWerB,EAXCC,IAAOC,IAAV,KCgBEoB,EAdI,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAClC,OACE,eAAC,EAAD,WACGnB,OAAOC,KAAKgB,GAAOf,KAAI,SAAAC,GAAI,OAC1B,oBAAGC,UAAU,OAAb,UACGD,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,GADtC,KAC2C,sBAAML,UAAU,aAAhB,SAA8Ba,EAAMd,OADtDA,MAI3B,oBAAGC,UAAU,OAAb,oBAA4Bc,OAC5B,oBAAGd,UAAU,OAAb,gCAAwCe,IAAxC,WCLeC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPC,UAAY,SAAAC,GAAU,IACZnB,EAASmB,EAAMC,OAAfpB,KACR,EAAKqB,UAAS,SAAAP,GAAK,sBAAQd,EAAOc,EAAMd,GAAQ,O,EAElDsB,mBAAqB,WACnB,OAAO,EAAKR,MAAMC,KAAO,EAAKD,MAAME,QAAU,EAAKF,MAAMG,K,EAE3DM,gCAAkC,WAChC,IAAMC,EAAa,EAAKV,MAAMC,KAAO,EAAKD,MAAMC,KAAO,EAAKO,qBAAuB,EACnF,OAAOG,KAAKC,MAAmB,IAAbF,I,uDAIlB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBhB,QAASoC,KAAKb,MAAOtB,gBAAiBmC,KAAKT,cAE9D,cAAC,EAAD,CAASX,MAAM,aAAf,SACGoB,KAAKL,qBACJ,cAAC,EAAD,CAAYZ,MAAOiB,KAAKb,MAAOH,MAAOgB,KAAKL,mBAAoBV,iBAAkBe,KAAKJ,kCAEtF,cAAC,EAAD,CAAcnB,QAAQ,+B,GA5BDwB,aCDjCC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.9f089e6d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: max-content;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n`;\r\nexport default Wrapper;\r\n","import styled from 'styled-components';\r\nconst Wrapper = styled.div`\r\n  .feedback-btn {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .feedback-btn:hover,\r\n  .feedback-btn:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n  .feedback-btn:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Wrapper from './FeedbackOptionsStyled';\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <Wrapper>\r\n      {Object.keys(options).map(item => (\r\n        <button className=\"feedback-btn\" onClick={onLeaveFeedback} type=\"button\" key={item} name={item}>\r\n          {item[0].toUpperCase() + item.slice(1)}\r\n        </button>\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nconst SectionStyled = styled.div`\r\n  padding: 30px 0;\r\n  margin: 0 auto;\r\n  width: 400px;\r\n  .section-title {\r\n    font-size: 30px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nexport default SectionStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SectionStyled from './SectionStyled';\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"section-title\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nconst Wrapper = styled.div`\r\n  .stat {\r\n    font-weight: 500;\r\n  }\r\n  .stat:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .statNumber {\r\n    font-weight: 700;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Wrapper from './StatisticsStyled';\r\nconst Statistics = ({ props, total, positiveFeedback }) => {\r\n  return (\r\n    <Wrapper>\r\n      {Object.keys(props).map(item => (\r\n        <p className=\"stat\" key={item}>\r\n          {item[0].toUpperCase() + item.slice(1)}: <span className=\"statNumber\">{props[item]}</span>\r\n        </p>\r\n      ))}\r\n      <p className=\"stat\">Total: {total()}</p>\r\n      <p className=\"stat\">Positive feedback: {positiveFeedback()}%</p>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\nStatistics.propTypes = {\r\n  props: PropTypes.object.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positiveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport Wrapper from './AppStyled';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\nimport Notification from './notification/Notification';\nimport Section from './section/Section';\nimport Statistics from './statistics/Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  increment = event => {\n    const { name } = event.target;\n    this.setState(state => ({ [name]: state[name] + 1 }));\n  };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const percentage = this.state.good ? this.state.good / this.countTotalFeedback() : 0;\n    return Math.round(percentage * 100);\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.increment} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics props={this.state} total={this.countTotalFeedback} positiveFeedback={this.countPositiveFeedbackPercentage} />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Wrapper>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}